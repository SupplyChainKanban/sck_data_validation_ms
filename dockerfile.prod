## Dependencias ====================================================================
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app

COPY package.json ./
COPY package-lock.json ./

RUN npm install


## Builder ====================================================================
FROM node:21-alpine3.19 as build

ARG DATA_VALIDATION_DATABASE_URL
ENV DATABASE_URL=$DATA_VALIDATION_DATABASE_URL

WORKDIR /usr/src/app

# Copiar de deps los módulos de node
COPY --from=deps /usr/src/app/node_modules ./node_modules
# copiar todo el código fuente de la aplicación
COPY . .

RUN npx prisma migrate deploy
RUN npx prisma generate

#Antes, se puede hacer un npm run test
RUN npm run build
# Limpieza de todos los módulos de node que no necesito, solo dejar los de producción para reducir el peso.
RUN npm ci -f --only=production && npm cache clean --force




## Crear la imagen final de docker ==============================================
FROM node:21-alpine3.19 as prod
WORKDIR /usr/src/app

COPY --from=build /usr/src/app/node_modules ./node_modules

#Copiar la carpeta de distribución dist
COPY --from=build /usr/src/app/dist ./dist
COPY --from=build /usr/src/app/prisma ./prisma
COPY --from=deps /usr/src/app/package*.json ./

ENV NODE_ENV=production

# Es para quitarle privilegios al usuario root con este usuario creado que solo puede ejecutar aquí.
USER node

EXPOSE 3000

# CMD ["npm", "run", "start:prod"]
CMD ["node", "dist/main"]